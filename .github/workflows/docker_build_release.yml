name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Clone dependent repositories
        run: ./scripts/clone_repos.sh

      - name: Build Docker image using build_image.sh
        run: ./scripts/build_image.sh
        env:
          DOCKER_BUILDKIT: 0  # Disable BuildKit for visibility

      - name: Find built image by ID and retag for GHCR
        run: |
          echo "Searching for dynaarm-jazzy image by ID..."
          IMAGE_ID=$(docker images --no-trunc --format "{{.Repository}} {{.ID}}" | grep dynaarm-jazzy | awk '{print $2}')
          if [ -z "$IMAGE_ID" ]; then
            echo "❌ Could not find dynaarm-jazzy image"
            docker images
            exit 1
          fi
          echo "✅ Found image ID: $IMAGE_ID"
          docker tag $IMAGE_ID ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to GHCR
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push-to-registry: true
