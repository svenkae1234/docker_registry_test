name: Create and publish a Docker image

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: '45 13 * * *'  # Every day at 13:45 UTC

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: ghcr.io/byts/ros2-workspace:latest
  DIGEST_FILE: ros2_base_image_digest.txt

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install skopeo and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq

      - name: Get current digest of base image
        id: check_digest
        run: |
          digest=$(skopeo inspect docker://${{ env.BASE_IMAGE }} | jq -r '.Digest')
          echo "digest=$digest" >> $GITHUB_OUTPUT
          echo "$digest" > ${{ env.DIGEST_FILE }}

      - name: Download previous digest (if exists)
        uses: actions/download-artifact@v4
        with:
          name: ros2-base-image-digest
        continue-on-error: true

      - name: Load previous digest
        id: load_previous
        run: |
          if [ -f ${{ env.DIGEST_FILE }} ]; then
            previous=$(cat ${{ env.DIGEST_FILE }})
          else
            echo "No previous digest found, treating as new image."
            previous="none"
          fi
          echo "previous_digest=$previous" >> $GITHUB_OUTPUT


      - name: Compare digests
        id: compare
        run: |
          if [ "${{ steps.load_previous.outputs.previous_digest }}" = "" ]; then
            echo "No previous digest â€“ assuming change."
            echo "changed=true" >> $GITHUB_OUTPUT
          elif [ "${{ steps.load_previous.outputs.previous_digest }}" != "${{ steps.check_digest.outputs.digest }}" ]; then
            echo "Digest changed."
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Digest unchanged."
            echo "${{steps.load_previous.outputs.previous_digest}}"
            echo "Digest unchanged."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi


      - name: Log in to the Container registry
        if: steps.compare.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: steps.compare.outputs.changed == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        if: steps.compare.outputs.changed == 'true'
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./docker/pkg-cache-server
          file: ./docker/pkg-cache-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        if: steps.compare.outputs.changed == 'true'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Upload new digest as artifact
        if: steps.compare.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ros2-base-image-digest
          path: ${{ env.DIGEST_FILE }}
